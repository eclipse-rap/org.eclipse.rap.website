<?xml version="1.0" encoding="iso-8859-1" ?>
<!--
 Copyright (c) 2011 EclipseSource and others.
 All rights reserved. This program and the accompanying materials
 are made available under the terms of the Eclipse Public License v1.0
 which accompanies this distribution, and is available at
 http://www.eclipse.org/legal/epl-v10.html
 -->

<noteworthy version="1.5">

  <!--
  <entry category="RWT" milestone="M1">
    <title>
      New API added
    </title>
    <description>
      <![CDATA[
        This will make it easier for the community to reuse existing code or
        to utilize new features.
        Here is a list of API methods added in M1:
        <br />
        <ul>
          <li><code>FontData()</code> constructor</li>
          <li><code>FontData#setName(),
                    FontData#setHeight(),
                    FontData#setStyle(),
                    FontData#setLocale()
          </code></li>
          <li><code>TreeItem#getImage()</code></li>
        </ul>
      ]]>
    </description>
  </entry>
  -->

  <entry category="RWT" milestone="M1">
    <title>
      q07 Fragment removed
    </title>
    <description>
      <![CDATA[
        The org.eclipse.rap.rwt.q07 fragment has been removed.
        The contents of this fragment have been moved to the org.eclipse.rap.rwt bundle and the q07
        fragment is not needed anymore.
        <p>
        The q07 fragment had originally been introduced to be able to support different versions of
        the qx client library. Meanwhile, we decided to maintain and evolve our own copy of this
        client library
        (<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=320993">bug 320993</a>),
        so the fragment is not needed anymore.
        However, with the new protocol
        (<a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=311355">bug 311355</a>),
        it will become possible to plug-in alternative clients for RAP.
        </p>
      ]]>
    </description>
  </entry>

  <entry category="RWT" milestone="M1">
    <title>
      Support for Failover Cluster
    </title>
    <description>
      <![CDATA[
      Support for transparent session failover was added to RWT. This enables applications to
      run in a high-availability cluster.
      <p>
	      RWT had to be extended in two places to achieve this. An alternate life cycle was 
	      implemented that does not use a <em>UI Thread</em> and hence isn't compatible with SWT any 
	      more. As a side effect, this life cycle also eases integration with JEE and other 
	      technologies that use thread-local variables to access to security or transaction 
	      contexts.
      </p>
      <p>
	      The second area of work was to enable sessions to be replicated between cluster nodes. 
	      Therefore all classes in RWT whose instances will have session scope were made serializable.
	      Note that application code must also be prepared in that all objects that live in the 
	      session scope must be serializable.
      </p>
      <p>
        Serializable RWT sessions can also be used to swap inactive sessions onto disk and thereby 
        releasing the memory consumed by them. This allows for infinite session timeout settings 
        and saves users from annoying 'the session has timed out' messages.
      </p> 
      <p>
        For further details, please visit our 
        <a href="http://wiki.eclipse.org/RAP/RWT_Cluster">wiki page</a>.
      </p>
      ]]>
    </description>
  </entry>

  <entry category="RWT" milestone="M1">
    <title>
      UICallback Improvements
    </title>
    <description>
      <![CDATA[
        The UI callback was redesigned and made more robust. 
        <p>
	        When a callback request fails, the client sends a new callback request to re-establish 
	        the broken callback connection. To avoid unnecessary load on the client, retry requests 
	        are sent with a suitable delay.
        </p>
        <p>
	        On some servlet engines, an active UI callback prevented the session from expiring. This
	        has been solved so that applications can activate the UI callback without interfering
	        with the session timoeut.
        </p>
        <p>
          The <a href="http://wiki.eclipse.org/RAP/UI_Callback">Server Push Wiki Page</a>
          summarizes how the mechanism works internally.
        </p>
      ]]>
    </description>
  </entry>
  
  <entry category="RWT" milestone="M1">
    <title>
      Text Shadows
    </title>
    <description>
      <![CDATA[
        RAP-Theming now supports text shadows on the following widgets:
        <ul>
          <li>Shell</li>
          <li>Label</li>
          <li>CLabel</li>
          <li>CTabFolder</li>
          <li>Button</li>
          <li>DateTime</li>
          <li>ExpandBar</li>
          <li>Group</li>
          <li>Link</li>
          <li>List</li>
          <li>Spinner</li>
          <li>TabFolder</li>
          <li>Menu</li>
          <li>ToolTip</li>
          <li>Combo</li>
          <li>CCombo</li>
          <li>Tree</li>
          <li>Table</li>
          <li>Text</li>
          <li>ToolBar</li>
        </ul>
        <img title="Text Shadows in RAP" style="margin-bottom:7px" src="images/Text-Shadows.png" />
        Text shadows are not available in Internet Explorer due to missing <code>text-shadow</code> 
        CSS3 support. Text shadow also supports transparency using the 
        <a href="http://www.w3.org/TR/css3-color/#rgba-color">rgba</a> notation for color. 
        Example:<br/>
<code><pre>
Button {
  text-shadow: 0 1px 0 rgba( 0, 0, 0, 0.3 );
}
</pre></code>
      ]]>
    </description>
  </entry>
  
<!-- 
<
  <entry category="RWT" milestone="M1">
    <title>
      Table supports Markup for Rich Cell Content
    </title>
    <description>
      <![CDATA[
      The table was enhanced to allow markup to be passed to table item text
      (i.e. in calls to <code>TableItem#setText()</code>).
      <p>
        <img src="???" />
  
        <code><pre>
table.setData( Table.ITEM_HEIGHT, new Integer( 90 ) );
HashMap<String,Image> imageMap = new HashMap<String,Image>();
imageMap.put( "user", userImage );
table.setData( Table.IMAGE_MAP, imageMap );
String text
  = "<html>" 
  + "<img src='user'/><font name='sans serif' height='16'>John Doe</font><br/>Managing Director" 
  + "</html>";
tableItem.setText( text );
        </pre></code>
      </p>
      <p>
        Please note that the implementation is in an early stage and in particluar the API is 
        likely to change. Changes are currently tracked in 
        <a href="https://bugs.eclipse.org/bugs/show_bug.cgi?id=346768">bug 346768</a>.
        See the JavaDoc for <code>Table#ENABLE_RICH_TEXT</code> for further information on how 
        to use this feature.
      </p>
      ]]>
    </description>
  </entry>
-->
 
</noteworthy>
